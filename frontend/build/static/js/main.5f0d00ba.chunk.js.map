{"version":3,"sources":["components/Todos.js","components/AddTodo.js","App.js","reportWebVitals.js","index.js"],"names":["Todos","todos","deleteTodo","changeTodoStatus","style","listStyle","undefined","length","map","todo","type","checked","done","onChange","_id","name","onClick","AddTodo","addNewTodo","useState","setTodo","value","e","target","IPAddress","App","setTodos","useEffect","axios","get","then","res","data","className","post","newTodos","filter","catch","err","console","log","newTodo","forEach","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAAaA,EAAQ,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,WAAYC,EAAuB,EAAvBA,iBACzC,OACE,oBAAIC,MAAO,CAAEC,UAAW,QAAxB,cACaC,IAAVL,GAAwC,IAAjBA,EAAMM,OAC5BN,EAAMO,KAAI,SAACC,GAAD,OACR,+BACE,uBACEC,KAAK,WACLC,QAASF,EAAKG,KACdC,SAAU,kBAAMV,EAAiBM,EAAKK,QAExC,+BAAOL,EAAKM,OACZ,wBAAQC,QAAS,kBAAMd,EAAWO,EAAKK,MAAvC,4BAPOL,EAAKK,QAWhB,8ECfKG,EAAU,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACxB,EAAwBC,mBAAS,IAAjC,mBAAOV,EAAP,KAAaW,EAAb,KAKA,OACE,gCACE,uBACEV,KAAK,OACLW,MAAOZ,EACPI,SAAU,SAACS,GAAD,OAAOF,EAAQE,EAAEC,OAAOF,UAEpC,wBAAQL,QAAS,kBAVnBE,EAAWT,QACXW,EAAQ,KASN,8B,gBCRAI,EAAY,6DA0EHC,MAxEf,WACE,MAA0BN,mBAAS,IAAnC,mBAAOlB,EAAP,KAAcyB,EAAd,KA0DA,OAzDAC,qBAAU,WACRC,IAAMC,IAAN,UAAaL,EAAb,WAAgCM,MAAK,SAACC,GACpCL,EAASK,EAAIC,KAAK/B,YAEnB,IAsDD,sBAAKgC,UAAU,MAAf,UACE,0CACA,cAAC,EAAD,CACEhC,MAAOA,EACPC,WA1Ca,SAACY,GAClBc,IACGM,KADH,UACWV,EADX,iBACqC,CAAEV,QACpCgB,MAAK,SAACC,GACL,IAAII,EAAWlC,EAAMmC,QAAO,SAAC3B,GAAD,OAAUA,EAAKK,MAAQiB,EAAIC,KAAKlB,OAC5DY,EAAS,YAAIS,OAEdE,OAAM,SAACC,GACNC,QAAQC,IAAIF,OAmCZnC,iBA9BmB,SAACW,GACxB,IAAI2B,EACJxC,EAAMyC,SAAQ,SAACjC,GACTA,EAAKK,MAAQA,IACfL,EAAKG,MAAQH,EAAKG,KAClB6B,EAAUhC,MAGdmB,IACGM,KADH,UACWV,EADX,iBACqC,CAAEiB,YACpCX,MAAK,SAACC,GACL,IAAII,EAAWlC,EAAMO,KAAI,SAACC,GACxB,OAAIsB,EAAIC,KAAKlB,MAAQL,EAAKK,IACjBiB,EAAIC,KAEJvB,KAGXiB,EAAS,YAAIS,OAEdE,OAAM,SAACC,GACNC,QAAQC,IAAIF,SAWd,cAAC,EAAD,CAASpB,WA1DM,SAACuB,GAClB,IAAIhC,EAAO,CAAEM,KAAM0B,EAAS7B,MAAM,GAClCgB,IACGM,KADH,UACWV,EADX,cACkC,CAAEf,SACjCqB,MAAK,SAACC,GACLL,EAAS,GAAD,mBAAKzB,GAAL,CAAY8B,EAAIC,KAAKvB,WAE9B4B,OAAM,SAACC,GACNC,QAAQC,IAAIF,aCbLK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5f0d00ba.chunk.js","sourcesContent":["export const Todos = ({ todos, deleteTodo, changeTodoStatus }) => {\n  return (\n    <ul style={{ listStyle: \"none\" }}>\n      {todos !== undefined && todos.length !== 0 ? (\n        todos.map((todo) => (\n          <li key={todo._id}>\n            <input\n              type=\"checkbox\"\n              checked={todo.done}\n              onChange={() => changeTodoStatus(todo._id)}\n            />\n            <span>{todo.name}</span>\n            <button onClick={() => deleteTodo(todo._id)}>削除</button>\n          </li>\n        ))\n      ) : (\n        <div>Todoがありません</div>\n      )}\n    </ul>\n  );\n};\n","import { useState } from \"react\";\nexport const AddTodo = ({ addNewTodo }) => {\n  const [todo, setTodo] = useState(\"\");\n  const doAddTodo = () => {\n    addNewTodo(todo);\n    setTodo(\"\");\n  };\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={todo}\n        onChange={(e) => setTodo(e.target.value)}\n      />\n      <button onClick={() => doAddTodo()}>追加</button>\n    </div>\n  );\n};\n","import \"./App.css\";\nimport { Todos } from \"./components/Todos\";\nimport { AddTodo } from \"./components/AddTodo\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst IPAddress = \"https://test-lb-995685607.ap-northeast-1.elb.amazonaws.com\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    axios.get(`${IPAddress}/todos`).then((res) => {\n      setTodos(res.data.todos);\n    });\n  }, []);\n\n  //todo追加\n  const addNewTodo = (newTodo) => {\n    let todo = { name: newTodo, done: false };\n    axios\n      .post(`${IPAddress}/todos/add`, { todo })\n      .then((res) => {\n        setTodos([...todos, res.data.todo]);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  //todo削除\n  const deleteTodo = (_id) => {\n    axios\n      .post(`${IPAddress}/todos/delete`, { _id })\n      .then((res) => {\n        let newTodos = todos.filter((todo) => todo._id !== res.data._id);\n        setTodos([...newTodos]);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  //todostatus変更\n  const updateTodoStatus = (_id) => {\n    let newTodo;\n    todos.forEach((todo) => {\n      if (todo._id === _id) {\n        todo.done = !todo.done;\n        newTodo = todo;\n      }\n    });\n    axios\n      .post(`${IPAddress}/todos/update`, { newTodo })\n      .then((res) => {\n        let newTodos = todos.map((todo) => {\n          if (res.data._id === todo._id) {\n            return res.data;\n          } else {\n            return todo;\n          }\n        });\n        setTodos([...newTodos]);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  return (\n    <div className=\"App\">\n      <h1>todoList</h1>\n      <Todos\n        todos={todos}\n        deleteTodo={deleteTodo}\n        changeTodoStatus={updateTodoStatus}\n      />\n      <AddTodo addNewTodo={addNewTodo} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}